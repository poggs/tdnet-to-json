<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2006 sp1 U (http://www.altova.com) by Jason D'Arcy (Network Rail Infrastructure Ltd) -->
<xsd:schema xmlns:eai="http://xml.networkrail.co.uk/ns/2008/EAI" xmlns:nr="http://xml.networkrail.co.uk/ns/2008/NR" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://xml.networkrail.co.uk/ns/2008/EAI" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xsd:import namespace="http://xml.networkrail.co.uk/ns/2008/NR" schemaLocation="nr_types_v8.xsd"/>
	<xsd:annotation>
		<xsd:documentation>

This schema provides the data types to support Enterprise Applciation Integration including messaging, event logging and web services.

Change History
=========
Version	mm/yy	Author			Description
---------	-------	------------	---------------------
1.0			09/01	J Dore			eai_messaging_v2	first created
2.0			06/03	D Joyce		renamed from eai_messaging_v2.xsd
												changed reference to network rail
												changed xml namespace to http://xml.networkrail.co.uk/ns/2003/EAI
3.0			12/04	D Joyce		renamed from eai_messaging_2.xsdÂ·	
												updated namespaces
												changed target  namespace to http://xml.networkrail.co.uk/ns/2004/EAI
												added version number to Message
3.0			12/04	D Fletcher	Replaced anonymous complex types within
												ShortDescription, LongDescription and OriginalMessage  with use of
												named complex types ShortDescriptionType and LongDescriptionType.
												removed version number from Message and added as simple type
												Version
												changed Version from xsd:decimal to xsd:integer
												created V2 for following elements and types:
												element 		EventV2
												complexType 	EventV2
												element 		ShortDescriptionV2
												element 		LongDescriptionV2
												element		ReasonV2
												element		OriginalMessageV2
												element		LogMessageV2 (including version attribute)
												complexType	LogMessageV2
												element		DeadMessageV2 (including version attribute)
												complexType	DeadMessageV2
4.0			12/04	D Fletcher	added ReplyMessageV2 with Requestor and 
												requestMsgId, requestTimestamp &amp; requestReceived attributes
												per XML standards for reply message.
5.0			12/05	D Joyce		added Publication.to Message to hold one or more publication topic to 
												be used by EMS.
6.0			10/06	D Joyce		changed to use web service standards as per XSD standards.
												removed error queues from standard message type
7.0			01/07	J D'Arcy		Creation of 2007 Schema
8.0			05/07	Di Joyce		Add user token and Web Service Token
												changed prefix to eai for target namespace
9.0			01/08	J D'Arcy		Creation of 2008 Schema
9.1			02/08	J D'Arcy		Updated MsgData to be an anyType and unbounded.

(c) Copyright Network Rail

		</xsd:documentation>
	</xsd:annotation>
	<xsd:complexType name="MsgActor">
		<xsd:annotation>
			<xsd:documentation>Any system or person involved in messaging.</xsd:documentation>
		</xsd:annotation>
		<xsd:attribute name="organisation" type="xsd:string" use="optional"/>
		<xsd:attribute name="instance" type="xsd:string" use="optional"/>
		<xsd:attribute name="application" type="xsd:string" use="optional"/>
		<xsd:attribute name="component" type="xsd:string" use="optional"/>
		<xsd:attribute name="applicationDomain" type="xsd:string" use="optional"/>
		<xsd:attribute name="userID" type="xsd:string" use="optional"/>
		<xsd:attribute name="sessionID" type="xsd:string" use="optional"/>
	</xsd:complexType>
	<xsd:complexType name="Message">
		<xsd:annotation>
			<xsd:documentation>The root type for all XML messages.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Sender">
				<xsd:complexType>
					<xsd:complexContent>
						<xsd:extension base="eai:MsgActor"/>
					</xsd:complexContent>
				</xsd:complexType>
			</xsd:element>
			<xsd:element name="Addressee" type="eai:MsgActor" minOccurs="0"/>
			<xsd:element name="Publication" type="eai:Publication" minOccurs="0"/>
		</xsd:sequence>
		<xsd:attribute name="classification" type="eai:PrivacyClassification" use="optional"/>
		<xsd:attribute name="timestamp" type="xsd:dateTime" use="required">
			<xsd:annotation>
				<xsd:documentation>Always use UTC if possible.</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="owner" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="xsd:string">
					<xsd:enumeration value="Network Rail"/>
				</xsd:restriction>
			</xsd:simpleType>
		</xsd:attribute>
		<xsd:attribute name="originMsgId" use="optional">
			<xsd:simpleType>
				<xsd:restriction base="eai:rfc2822id"/>
			</xsd:simpleType>
		</xsd:attribute>
	</xsd:complexType>
	<xsd:complexType name="Publication">
		<xsd:annotation>
			<xsd:documentation>Publication Topics </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="TopicID" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:simpleType name="EventCategory">
		<xsd:annotation>
			<xsd:documentation>The type of an event.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="technical"/>
			<xsd:enumeration value="application"/>
			<xsd:enumeration value="user"/>
			<xsd:enumeration value="security"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="EventSeverity">
		<xsd:annotation>
			<xsd:documentation>The seriousness of an event.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="error"/>
			<xsd:enumeration value="warning"/>
			<xsd:enumeration value="info"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="rfc2822id">
		<xsd:annotation>
			<xsd:documentation>An RFC2822 compatible message id.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value=".*@.*"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="PrivacyClassification">
		<xsd:annotation>
			<xsd:documentation>The secrecy level of the contents of the message</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="public"/>
			<xsd:enumeration value="industry"/>
			<xsd:enumeration value="confidential"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Version">
		<xsd:annotation>
			<xsd:documentation>The version of a message, or related construct.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:integer"/>
	</xsd:simpleType>
	<xsd:complexType name="HeartBeatMessage">
		<xsd:annotation>
			<xsd:documentation>A message used to send an 'i'm alive' signal, usually in the absence of other messages.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="eai:Message"/>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="HeartBeatMsg" type="eai:HeartBeatMessage">
		<xsd:annotation>
			<xsd:documentation>An element for HeartBeatMessage complex type.</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:complexType name="ReplyMessageV2">
		<xsd:annotation>
			<xsd:documentation>A message sent in reply to another message.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="eai:Message">
				<xsd:sequence>
					<xsd:element name="Requestor" type="eai:MsgActor" minOccurs="0"/>
					<xsd:element name="Event" type="eai:EventV2" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
				<xsd:attribute name="requestMsgId" type="eai:rfc2822id" use="required"/>
				<xsd:attribute name="requestTimestamp" type="xsd:dateTime" use="required"/>
				<xsd:attribute name="requestReceived" type="xsd:dateTime" use="optional"/>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="LogMessageV2Type">
		<xsd:annotation>
			<xsd:documentation>A message sent to log an event.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="eai:Message">
				<xsd:sequence>
					<xsd:element name="EventV2" type="eai:EventV2" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="EventV2">
		<xsd:annotation>
			<xsd:documentation>An occurence worthy of logging.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Source" type="eai:MsgActor"/>
			<xsd:element name="ShortDescriptionV2" type="eai:ShortDescriptionType"/>
			<xsd:element name="LongDescriptionV2" type="eai:LongDescriptionType"/>
		</xsd:sequence>
		<xsd:attribute name="category" type="eai:EventCategory" use="required"/>
		<xsd:attribute name="severity" type="eai:EventSeverity" use="required"/>
		<xsd:attribute name="timestamp" type="xsd:dateTime" use="required"/>
		<xsd:attribute name="eventId" type="eai:rfc2822id" use="required"/>
		<xsd:attribute name="type" type="xsd:anyURI" use="optional"/>
	</xsd:complexType>
	<xsd:element name="LogMessageV2">
		<xsd:annotation>
			<xsd:documentation>A message sent to log an event.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="eai:LogMessageV2Type">
					<xsd:attribute name="version" type="eai:Version" use="required" fixed="2"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:complexType name="DeadMessageV2Type">
		<xsd:annotation>
			<xsd:documentation>A message being returned to sender or otherwise rerouted after problems.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="eai:Message">
				<xsd:sequence>
					<xsd:element name="ReasonV2" type="eai:EventV2">
						<xsd:annotation>
							<xsd:documentation>Events that caused the message to become dead.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="OriginalMessageV2" type="eai:ShortDescriptionType"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:element name="DeadMessageV2">
		<xsd:annotation>
			<xsd:documentation>Global Element for DeadMessage complex type.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="eai:DeadMessageV2Type">
					<xsd:attribute name="version" type="eai:Version" use="required" fixed="2"/>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:complexType name="ShortDescriptionType" mixed="true">
		<xsd:annotation>
			<xsd:documentation>Short Description with open content</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:any processContents="skip"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="LongDescriptionType" mixed="true">
		<xsd:annotation>
			<xsd:documentation>Long Description with open content</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence maxOccurs="unbounded">
			<xsd:any processContents="skip"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="UserToken">
		<xsd:annotation>
			<xsd:documentation>This is the user details passed to web service requrest to authenticate the user</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="authenicated" type="xsd:boolean"/>
			<xsd:element name="User" type="eai:MsgActor"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="WSRequestToken">
		<xsd:annotation>
			<xsd:documentation>This is the token sent to identify the request and user </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="UserToken" type="eai:UserToken"/>
			<xsd:element name="RequestID" type="xsd:string"/>
			<xsd:element name="RequestTimeStamp" type="xsd:dateTime"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:element name="WSRequestToken" type="eai:WSRequestToken">
		<xsd:annotation>
			<xsd:documentation>This is the token sent to identify the request and user </xsd:documentation>
		</xsd:annotation>
	</xsd:element>
	<xsd:element name="GeneralMsg">
		<xsd:annotation>
			<xsd:documentation>Top level element for General message</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element ref="eai:MsgAttribute" minOccurs="0" maxOccurs="unbounded"/>
				<xsd:element name="MsgData" type="xsd:anyType" maxOccurs="unbounded"/>
			</xsd:sequence>
			<xsd:attribute name="creationDateTime" type="xsd:dateTime" use="optional"/>
			<xsd:attribute name="payloadSize" type="xsd:positiveInteger" use="optional"/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="GeneralMsgV1">
		<xsd:annotation>
			<xsd:documentation>Structure to convey anonymous data structures</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:extension base="eai:Message">
					<xsd:sequence>
						<xsd:element ref="eai:GeneralMsg"/>
					</xsd:sequence>
				</xsd:extension>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="MsgAttribute">
		<xsd:annotation>
			<xsd:documentation>Structure to hold any application defined general message attribute</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="Name" type="xsd:string"/>
				<xsd:element name="Value" type="xsd:string"/>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
</xsd:schema>
